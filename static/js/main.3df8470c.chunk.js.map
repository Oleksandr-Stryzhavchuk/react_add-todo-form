{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","userId","t","usersFromServer","find","u","App","useState","setTitle","selectedUser","setSelectedUser","visibleTodos","setVisibleTodos","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","newTodo","length","prevState","onAdd","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3df8470c.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { user, title, completed } = todo;\n\n  return (\n    <article\n      data-id=\"16\"\n      className={classNames('TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction UserId(id: number): User | null {\n  const foundUserId = usersFromServer.find(u => u.id === id);\n\n  return foundUserId || null;\n}\n\nconst todos: Todo[] = todosFromServer.map(t => ({\n  ...t,\n  user: UserId(t.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState<string>('');\n  const [selectedUser, setSelectedUser] = useState<number>(0);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(todos);\n  const [titleError, setTitleError] = useState<boolean>(false);\n  const [userError, setUserError] = useState<boolean>(false);\n\n  const onAdd = () => {\n    if (!title) {\n      (setTitleError(true));\n    }\n\n    if (!selectedUser) {\n      setUserError(true);\n    }\n\n    if (!title || !selectedUser) {\n      return;\n    }\n\n    const newTodo = {\n      id: visibleTodos.length + 1,\n      title,\n      completed: false,\n      userId: selectedUser,\n      user: usersFromServer.find(u => u.id === selectedUser) || null,\n    };\n\n    setVisibleTodos((prevState) => [\n      ...prevState,\n      newTodo,\n    ]);\n\n    setTitle('');\n    setSelectedUser(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          onAdd();\n        }}\n      >\n        <div className=\"field\">\n          Title:&nbsp;\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={(event) => {\n              setTitleError(false);\n              setTitle(event.target.value);\n            }}\n          />\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          User:&nbsp;\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={(event) => {\n              setSelectedUser(+event.target.value);\n              setUserError(false);\n            }}\n          >\n            <option\n              value=\"0\"\n              disabled\n            >\n              Choose a user\n            </option>\n\n            {usersFromServer.map(u => (\n              <option value={u.id}>{u.name}</option>\n            ))}\n          </select>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}