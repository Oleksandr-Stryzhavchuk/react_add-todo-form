{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","userId","usersFromServer","find","App","useState","selectedUser","setSelectedUser","setTitle","titleError","setTittleError","userError","setUserError","action","method","onSubmit","event","preventDefault","foundedUser","uniqueId","Math","max","trim","length","push","addTodo","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"6MAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4B,uBCpDEC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCJ,EAAgBI,EAAhBJ,KAAME,EAAUE,EAAVF,MAEd,OACE,mBAAGG,UAAU,WAAWC,KAAI,iBAAYJ,GAAxC,SACGF,KCFMO,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCJ,EAA2BI,EAA3BJ,KAAMK,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,UAErB,OACE,0BACE,UAASF,EAAKT,GACdM,UAAWM,IACT,WACA,CACE,sBAAuBD,IAL7B,UASE,oBAAIL,UAAU,kBAAd,SAAiCI,IAChCL,GAAQ,cAAC,EAAD,CAAUA,KAAMA,QChBlBQ,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAN,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKT,UCK/B,IAAMc,EChBE,CACb,CACEd,GAAI,EACJU,MAAO,qBACPC,WAAW,EACXK,OAAQ,GAEV,CACEhB,GAAI,GACJU,MAAO,kBACPC,WAAW,EACXK,OAAQ,GAEV,CACEhB,GAAI,EACJU,MAAO,qCACPC,WAAW,EACXK,OAAQ,IDDiCD,KAAI,SAAAN,GAAI,kCAChDA,GADgD,IAEnDJ,MAReW,EAQDP,EAAKO,OAPDC,EAAgBC,MAAK,SAAAb,GAAI,OAAIA,EAAKL,KAAOgB,MAEvC,QAHtB,IAAiBA,KAWJG,EAAgB,WAC3B,MAAwCC,mBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOV,EAAP,KAAca,EAAd,KACA,EAAqCH,oBAAS,GAA9C,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KA2CA,OACE,sBAAKrB,UAAU,MAAf,UACE,+CAEA,uBACEsB,OAAO,aACPC,OAAO,OACPC,SAZmB,SAACC,GACxBA,EAAMC,iBArCQ,SAAChC,GACf,IAAMiC,EAAchB,EAAgBC,MAAK,SAAAb,GAAI,OAAIA,EAAKL,KAAOA,KACvDkC,EAAWC,KAAKC,IAAL,MAAAD,KAAI,YAAQrB,EAAMC,KAAI,SAAAN,GAAI,OAAIA,EAAKT,QAAO,EAE/B,IAAxBU,EAAM2B,OAAOC,QACfb,GAAe,GAGZJ,GACHM,GAAa,GAGXM,GAAevB,EAAM2B,OAAOC,OAAS,IACvCxB,EAAMyB,KAAK,CACTvC,GAAIkC,EACJlB,OAAQhB,EACRU,QACAC,WAAW,EACXN,KAAM4B,IAGRV,EAAS,IACTD,EAAgB,IAgBlBkB,CAAQnB,IAON,UAKE,sBAAKf,UAAU,QAAf,UACE,+CAEE,uBACEmC,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAOjC,EACPkC,SAhCc,SAACb,GACzBR,EAASQ,EAAMc,OAAOF,OACtBlB,GAAe,SAkCRD,GACC,sBAAMlB,UAAU,QAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACE,8CAEE,yBACE,UAAQ,aACRqC,MAAOtB,EACPuB,SA1CgB,SAACb,GAC3BT,GAAiBS,EAAMc,OAAOF,OAC9BhB,GAAa,IAqCL,UAKE,wBACEgB,MAAM,IACNG,UAAQ,EAFV,2BAOC7B,EAAgBF,KAAI,SAAAV,GAAI,OACvB,wBACEsC,MAAOtC,EAAKL,GADd,SAIGK,EAAKJ,MAFDI,EAAKL,aAOjB0B,GACC,sBAAMpB,UAAU,QAAhB,qCAGJ,wBACEmC,KAAK,SACL,UAAQ,eAFV,oBAQF,yBAASnC,UAAU,WAAnB,SACE,cAAC,EAAD,CAAUQ,MAAOA,UEjIzBiC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.aa0a26e2.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { user, title, completed } = todo;\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [title, setTitle] = useState('');\n  const [titleError, setTittleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const addTodo = (id: number) => {\n    const foundedUser = usersFromServer.find(user => user.id === id);\n    const uniqueId = Math.max(...todos.map(todo => todo.id)) + 1;\n\n    if (title.trim().length === 0) {\n      setTittleError(true);\n    }\n\n    if (!selectedUser) {\n      setUserError(true);\n    }\n\n    if (foundedUser && title.trim().length > 0) {\n      todos.push({\n        id: uniqueId,\n        userId: id,\n        title,\n        completed: false,\n        user: foundedUser,\n      });\n\n      setTitle('');\n      setSelectedUser(0);\n    }\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTittleError(false);\n  };\n\n  const handleUserSelection = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(+event.target.value);\n    setUserError(false);\n  };\n\n  const handleFormSubmit = (event: React.ChangeEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addTodo(selectedUser);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            Title:&nbsp;\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitleChange}\n            />\n          </label>\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            User:&nbsp;\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUser}\n              onChange={handleUserSelection}\n            >\n              <option\n                value=\"0\"\n                disabled\n              >\n                Choose a user\n              </option>\n\n              {usersFromServer.map(user => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <section className=\"TodoList\">\n        <TodoList todos={todos} />\n      </section>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}